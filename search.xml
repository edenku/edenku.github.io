<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IDEA常用小技巧</title>
    <url>/2021/05/11/IDEA%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/2021/05/14/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p><strong>查看防火墙状态</strong></p>
<p>systemctl status firewalld.service</p>
<p>firewall-cmd –state</p>
<p><strong>关闭防火墙</strong></p>
<p>systemctl stop firewalld.service</p>
<p><strong>开启防火墙</strong></p>
<p>systemctl start firewalld.service</p>
<p><strong>禁用防火墙</strong></p>
<p>systemctl disable firewalld.service</p>
<span id="more"></span>

<p><strong>设置开机自动启动</strong></p>
<p>systemctl enable firewalld.service</p>
<p> <strong>关闭开机启动</strong></p>
<p>systemctl disable firewalld.service</p>
<p><strong>查看防火墙所有开放的端口</strong></p>
<p>firewall-cmd –zone=public –list-ports</p>
]]></content>
  </entry>
  <entry>
    <title>SpringCloud学习 | 第一篇 构建项目</title>
    <url>/2021/05/12/SpringCloud%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%20%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h2 id="SpringCloud-与-SpringBoot的版本"><a href="#SpringCloud-与-SpringBoot的版本" class="headerlink" title="SpringCloud 与 SpringBoot的版本"></a>SpringCloud 与 SpringBoot的版本</h2><p>因为SpringCloud与SpringBoot的版本需要对应，否则会出现异常。</p>
<p><a href="https://spring.io/projects/spring-cloud#learn">https://spring.io/projects/spring-cloud#learn</a> 查看目前的版本</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210512141013629.png" alt="image-20210512141013629"></p>
<p>点击Reference Doc，可以查看该版本对应的SpringBoot版本。</p>
<span id="more"></span>

<h2 id="构建父工程"><a href="#构建父工程" class="headerlink" title="构建父工程"></a>构建父工程</h2><p>Idea创建一个Maven项目，选择quickstart，输入你的groupId和artifactId创建一个父工程。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210512141348116.png" alt="image-20210512141348116"></p>
<p>父工程仅保留pom文件即可，所以我们删除src目录并修改pom文件，添加版本依赖。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ruipin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ruipin-cloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>ruipin-cloud<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>睿聘Cloud<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ruipin.version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">ruipin.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>2020.0.2<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">spring-cloud-alibaba.version</span>&gt;</span>2020.0.RC1<span class="tag">&lt;/<span class="name">spring-cloud-alibaba.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.18<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.5.8<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>8.0.19<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">minio.version</span>&gt;</span>7.1.0<span class="tag">&lt;/<span class="name">minio.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">knife4j.version</span>&gt;</span>2.0.8<span class="tag">&lt;/<span class="name">knife4j.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">redisson.version</span>&gt;</span>3.15.1<span class="tag">&lt;/<span class="name">redisson.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">swagger.version</span>&gt;</span>1.6.2<span class="tag">&lt;/<span class="name">swagger.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!--Spring Cloud 相关依赖--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!--Spring Cloud &amp; Alibaba 相关依赖--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;minio.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;knife4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-micro-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;knife4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-spring-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;knife4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 分布式锁 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;redisson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>到此，一个父工程就创建完毕了。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210512141721341.png" alt="image-20210512141721341"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>接下来我们开始搭建Nacos服务。</p>
]]></content>
      <categories>
        <category>SpringCloud从零开始构建微服务</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud学习 | 第三篇 SpringCloud整合Nacos实现配置中心</title>
    <url>/2021/05/14/SpringCloud%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89%20Nacos%E5%AE%9E%E7%8E%B0%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</url>
    <content><![CDATA[<blockquote>
<p>接上述文章，我们在auth模块中使用Nacos实现配置中心。</p>
</blockquote>
<h3 id="一段废话"><a href="#一段废话" class="headerlink" title="一段废话"></a>一段废话</h3><p>相比Eureka要专门搭建一个config服务实现配置中心，Nacos集成了配置中心。个人觉得还是值得推荐。</p>
<h3 id="SpringCloud实现配置中心"><a href="#SpringCloud实现配置中心" class="headerlink" title="SpringCloud实现配置中心"></a>SpringCloud实现配置中心</h3><h4 id="添加pom依赖"><a href="#添加pom依赖" class="headerlink" title="添加pom依赖"></a>添加pom依赖</h4><p>相比上一文，我们追加了一个spring-cloud-starter-alibaba-nacos-config依赖。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringCloud从2020版本后对配置文件加载进行了重构，</span></span><br><span class="line"><span class="comment">			默认不加载bootstrap配置文件，添加bootstrap依赖解决该问题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注册中心 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- nacos-config 配置中心依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h4 id="配置文件添加nacos配置"><a href="#配置文件添加nacos配置" class="headerlink" title="配置文件添加nacos配置"></a>配置文件添加nacos配置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruipin-auth</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">http://127.0.0.1:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span>      <span class="comment"># 默认值 properties</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">DEFAULT_GROUP</span>      <span class="comment"># 默认值 DEFAULT_GROUP</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="attr">example:</span></span><br><span class="line">  <span class="attr">hello-word:</span> <span class="string">Hello</span> <span class="string">Ruipin</span>		 <span class="comment"># 配置测试信息</span></span><br></pre></td></tr></table></figure>

<h4 id="添加测试接口读取配置"><a href="#添加测试接口读取配置" class="headerlink" title="添加测试接口读取配置"></a>添加测试接口读取配置</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/sample&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SampleController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;example.hello-word&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String word;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getWord</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="keyword">this</span>.word);<span class="comment">//Result为自定义响应，可以直接返回this.word字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>启动服务，第一次调用 <a href="http://localhost:8000/sample/hello">http://localhost:8000/sample/hello</a></p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514161730557.png" alt="image-20210514161730557"></p>
<h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p>打开Nacos界面，配置列表，添加配置：</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514162229678.png" alt="image-20210514162229678"></p>
<p>Data ID: 输入 ${prefix}-${spring.profiles.active}.${file-extension}，根据我上面的配置，我的配置截图</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514162723996.png" alt="image-20210514162723996"></p>
<p>点击发布，列表中出现一条配置。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514162808803.png" alt="image-20210514162808803"></p>
<h4 id="再次测试"><a href="#再次测试" class="headerlink" title="再次测试"></a>再次测试</h4><p>第二次调用 <a href="http://localhost:8000/sample/hello%EF%BC%8C%E6%88%90%E5%8A%9F%E5%AE%9E%E7%8E%B0%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E7%9A%84%E5%8A%A8%E6%80%81%E5%88%B7%E6%96%B0%E3%80%82">http://localhost:8000/sample/hello，成功实现配置信息的动态刷新。</a></p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514162839536.png" alt="image-20210514162839536"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>到此，SpringCloud整合Nacos实现配置中心就完成了。相比Eureka确实方便了很多。</p>
]]></content>
      <categories>
        <category>SpringCloud从零开始构建微服务</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud学习 | 第五篇 SpringCloud整合OpenFeign实现服务间调用</title>
    <url>/2021/05/15/SpringCloud%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%94%EF%BC%89%20OpenFeign%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E9%97%B4%E8%B0%83%E7%94%A8/</url>
    <content><![CDATA[<h3 id="SpringCloud实现服务间调用"><a href="#SpringCloud实现服务间调用" class="headerlink" title="SpringCloud实现服务间调用"></a>SpringCloud实现服务间调用</h3><p>本文涉及模块</p>
<table>
<thead>
<tr>
<th>模块</th>
<th>端口</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Nacos server</td>
<td>8848</td>
<td>注册中心与配置中心</td>
</tr>
<tr>
<td>ruipin-auth</td>
<td>8000</td>
<td>服务调用方</td>
</tr>
<tr>
<td>ruipin-demo</td>
<td>8050</td>
<td>服务提供方</td>
</tr>
<tr>
<td>ruipin-demo-api</td>
<td>-</td>
<td>api模块，提供给auth引用</td>
</tr>
</tbody></table>
<h4 id="服务提供方"><a href="#服务提供方" class="headerlink" title="服务提供方"></a>服务提供方</h4><p>新建模块ruipin-application模块，管理所有业务功能。在application中建立ruipin-demo，提供服务。</p>
<span id="more"></span>

<p><strong>POM依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- SpringCloud从2020版本后对配置文件加载进行了重构，</span></span><br><span class="line"><span class="comment">    默认不加载bootstrap配置文件，添加bootstrap依赖解决该问题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注册中心 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置中心 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ruipin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ruipin-demo-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ruipin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>配置文件</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8050</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruipin-demo</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">http://localhost:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">$&#123;spring.cloud.nacos.discovery.server-addr&#125;</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>服务提供</strong></p>
<p>一个DemoController类，提供一个接口，返回信息。</p>
<p>一个启动入口类。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/demo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/sayHello/&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">sayHello</span><span class="params">(<span class="meta">@PathVariable</span> String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="服务的API"><a href="#服务的API" class="headerlink" title="服务的API"></a>服务的API</h4><p>在application模块中，建立子模块，ruipin-api-demo。提供feigin远程调用</p>
<p><strong>POM依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 远程调用HTTP客户端 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- openfeign依赖 1. http客户端选择okhttp 2. loadbalancer替换ribbon --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-okhttp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ruipin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ruipin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>Feign调用</strong></p>
<p>创建Feign调用接口并提供一个降级回调服务。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;ruipin-demo&quot;, fallback = DemoFeignFallback.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DemoFeignClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/demo/sayHello/&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="function">Result&lt;String&gt; <span class="title">sayHello</span><span class="params">(<span class="meta">@PathVariable</span> String name)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoFeignFallback</span> <span class="keyword">implements</span> <span class="title">DemoFeignClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;String&gt; <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        log.error(<span class="string">&quot;feign远程调用系统用户服务异常后的降级方法&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> Result.failed(ResultCode.DEGRADATION);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="服务调用方"><a href="#服务调用方" class="headerlink" title="服务调用方"></a>服务调用方</h4><p>ruipin-auth模块 基于之前的依赖，添加ruipin-demo-api依赖，全部依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- SpringCloud从2020版本后对配置文件加载进行了重构，</span></span><br><span class="line"><span class="comment">默认不加载bootstrap配置文件，添加bootstrap依赖解决该问题 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 注册中心 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- nacos-config 配置中心依赖--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ruipin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ruipin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ruipin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ruipin-demo-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ruipin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>配置文件</strong></p>
<p>配置文件将feign底层调用修改为okhttp。全部配置内容有</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruipin-auth</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">http://127.0.0.1:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span>      <span class="comment"># 默认值 properties</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">DEFAULT_GROUP</span>      <span class="comment"># 默认值 DEFAULT_GROUP</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="attr">example:</span></span><br><span class="line">  <span class="attr">hello-word:</span> <span class="string">Hello</span> <span class="string">Ruipin</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">okhttp:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><strong>服务调用代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="comment">// 开启feign调用</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(AuthApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/sample&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SampleController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DemoFeignClient demoFeignClient;</span><br><span class="line">	<span class="comment">//调用ruipin-demo的服务</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/sayHello/&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">sayHello</span><span class="params">(<span class="meta">@PathVariable</span> String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> demoFeignClient.sayHello(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>到此，我们的服务调用代码就整合完毕，依次启动nacos server、ruipin-auth、ruipin-demo三个模块。</p>
<p>打开localhost:8848/nacos，可以看到ruipin-auth和ruipin-demo服务已经启动</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210515114749158.png" alt="image-20210515114749158"></p>
<p>我们先直接调用demo的接口服务，调用正常。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210515114656194.png" alt="image-20210515114656194"></p>
<p>然后我们调用auth服务，也可以正常调用。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210515114902468.png" alt="image-20210515114902468"></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>到此，我们的服务间调用就整合完毕了。</p>
]]></content>
      <categories>
        <category>SpringCloud从零开始构建微服务</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud学习 | 第二篇 SpringCloud整合Nacos实现注册中心</title>
    <url>/2021/05/14/SpringCloud%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89%20Nacos%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</url>
    <content><![CDATA[<blockquote>
<p>接上述文章，我们开始搭建Nacos服务。</p>
</blockquote>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><strong>为什么要使用Nacos，不使用Eureka呢</strong></p>
<ol>
<li>Eureka只实现注册中心，nacos同时实现注册中心与配置中心。</li>
<li>Eureka2.0 闭源, Nacos国产各种中文文档。</li>
</ol>
<h3 id="搭建Nacos服务"><a href="#搭建Nacos服务" class="headerlink" title="搭建Nacos服务"></a>搭建Nacos服务</h3><h4 id="下载Nacos-server"><a href="#下载Nacos-server" class="headerlink" title="下载Nacos-server"></a>下载Nacos-server</h4><p><a href="https://github.com/alibaba/nacos/releases">GitHub地址</a> 。目前nacos-server的最新版本为2.0.1，不同版本可能些许差异。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514105212761.png" alt="image-20210514105212761"></p>
<p>下载到本地目录并解压，我放在了我代码同级目录。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514105651639.png" alt="image-20210514105651639"></p>
<span id="more"></span>

<h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><p>使用nacos\conf\nacos-mysql.sql脚本创建好数据库表和数据初始化。库名：nacos_config</p>
<h4 id="配置数据库连接"><a href="#配置数据库连接" class="headerlink" title="配置数据库连接"></a>配置数据库连接</h4><p>编辑nacos\conf/application.properties，修改自己本地的数据库连接信息    </p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514110529653.png" alt="image-20210514110529653"></p>
<h4 id="启动nacos-server服务"><a href="#启动nacos-server服务" class="headerlink" title="启动nacos-server服务"></a>启动nacos-server服务</h4><p>☆ 确保本机已配置JAVA环境变量，版本8+</p>
<p>nacos\bin\下执行 startup.cmd -m standalone 启动。-m standalone代表单机模式。默认以集群模式启动。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514112333044.png" alt="image-20210514112333044"></p>
<h4 id="进入nacos管理控制台"><a href="#进入nacos管理控制台" class="headerlink" title="进入nacos管理控制台"></a>进入nacos管理控制台</h4><p>启动服务后，登录控制台看看吧。地址: <a href="http://localhost:8848/nacos">http://localhost:8848/nacos</a>. 账号/密码: nacos/nacos</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514112527620.png" alt="image-20210514112527620"></p>
<h3 id="SpringCloud整合Nacos"><a href="#SpringCloud整合Nacos" class="headerlink" title="SpringCloud整合Nacos"></a>SpringCloud整合Nacos</h3><h4 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h4><p>Nacos Server：2.0.1</p>
<p>SpringBoot：   2.4.5</p>
<p>SpringCloud： 2020.0.2</p>
<p>SpringCloud Alibaba：2021.1</p>
<p><a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E">版本依赖关系</a> </p>
<p><img src="C:%5CUsers%5Cci22578%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210514154208991.png" alt="image-20210514154208991"></p>
<h4 id="服务注册到Nacos"><a href="#服务注册到Nacos" class="headerlink" title="服务注册到Nacos"></a>服务注册到Nacos</h4><p>新建一个module，命名为ruipin-auth</p>
<p><strong>POM依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">     	<span class="comment">&lt;!-- SpringCloud从2020版本后对配置文件加载进行了重构，</span></span><br><span class="line"><span class="comment">			默认不加载bootstrap配置文件，添加bootstrap依赖解决该问题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注册中心 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>配置文件</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruipin-auth</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">http://127.0.0.1:8848</span></span><br></pre></td></tr></table></figure>



<p><strong>启动入口开启服务发现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(AuthApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>访问Nacos服务列表</strong>查看</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514145800211.png" alt="image-20210514145800211"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>到此SpringCloud整合Nacos注册中心就完成了，后面我们继续使用Nacos完成配置中心配置。</p>
]]></content>
      <categories>
        <category>SpringCloud从零开始构建微服务</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud学习 | 第四篇 SpringCloud整合Gateway实现API网关</title>
    <url>/2021/05/14/SpringCloud%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9B%9B%EF%BC%89%20Gateway%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p>接下来继续配置Gateway。</p>
</blockquote>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><strong>微服务网关的作用有哪些？</strong></p>
<ol>
<li>鉴权。</li>
<li>统一入口，保障服务安全性。</li>
<li>限流熔断统一配置。</li>
<li>路由转发。</li>
<li>负载均衡</li>
<li>链路跟踪。</li>
</ol>
<p><strong>为什么使用Gateway实现API网关？</strong></p>
<p>SpringCloud目前常用的网关有Netflix开源的Zuul和Spring自己的Gateway。</p>
<span id="more"></span>

<h3 id="SpringCloud实现API网关"><a href="#SpringCloud实现API网关" class="headerlink" title="SpringCloud实现API网关"></a>SpringCloud实现API网关</h3><p>本文涉及的微服务模块有：</p>
<table>
<thead>
<tr>
<th>模块</th>
<th>端口</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Nacos Server</td>
<td>8848</td>
<td>注册与配置中心</td>
</tr>
<tr>
<td>ruipin-gateway</td>
<td>9999</td>
<td>网关</td>
</tr>
<tr>
<td>ruipin-auth</td>
<td>8000</td>
<td>认证及服务demo</td>
</tr>
</tbody></table>
<h4 id="新建ruipin-gateway模块"><a href="#新建ruipin-gateway模块" class="headerlink" title="新建ruipin-gateway模块"></a>新建ruipin-gateway模块</h4><h4 id="添加POM依赖"><a href="#添加POM依赖" class="headerlink" title="添加POM依赖"></a>添加POM依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringCloud从2020版本后对配置文件加载进行了重构，</span></span><br><span class="line"><span class="comment">           默认不加载bootstrap配置文件，添加bootstrap依赖解决该问题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 2020Cloud版本，不加该依赖可能在路由转发时会报503 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 注册中心 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>配置nacos注册和路由转发相关</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruipin-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="comment"># 注册中心</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">http://127.0.0.1:8848</span></span><br><span class="line">      <span class="comment"># 配置中心</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">$&#123;spring.cloud.nacos.discovery.server-addr&#125;</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">locator:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span>  <span class="comment"># 启用动根据服务id生成路由</span></span><br><span class="line">          <span class="attr">lower-case-service-id:</span> <span class="literal">true</span> <span class="comment"># 设置路由的路径为小写的服务ID</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">ruipin-auth</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://ruipin-auth</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/auth/**</span>  <span class="comment"># 所有/auth/**开头的请求都会转发到 lb://ruipin-auth</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">StripPrefix=1</span> <span class="comment"># 移除前缀 /auth</span></span><br></pre></td></tr></table></figure>

<h4 id="启动入口"><a href="#启动入口" class="headerlink" title="启动入口"></a>启动入口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GatewayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>依次启动Nacos-server、ruipin-auth、ruipin-gateway。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210514181859300.png" alt="image-20210514181859300"></p>
<p>服务调用9999端口网关服务，/auth/开头的请求转发到了 ruipin-auth下的/sample/hello请求，测试成功。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>到此，一个简单的微服务框架就快要成型了。接下来我们会继续整合OAuth2进行网关鉴权等。</p>
<h3 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h3><ul>
<li><p><a href="https://www.cnblogs.com/haoxianrui/p/13608650.html">Spring Cloud实战 | 第四篇：Spring Cloud整合Gateway实现API网关</a></p>
</li>
<li><p><a href="https://www.fangzhipeng.com/springcloud/2021/04/03/sc-2020-gateway.html">SpringCloud 2020版本教程2：使用spring cloud gateway作为服务网关</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>SpringCloud从零开始构建微服务</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo（一）:使用hexo + next主题搭建个人博客</title>
    <url>/2021/05/10/hexo%EF%BC%88%E4%B8%80%EF%BC%89%E4%BD%BF%E7%94%A8hexo%E5%92%8Cnext%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h4><p>  从<a href="https://nodejs.org/en/download/">官网</a>下载最新的安装版本。Windows Installer (.msi) 64-bit</p>
<p>  这里也可以从<a href="https://npm.taobao.org/">淘宝镜像</a>去下载。</p>
<p>  一路默认下一步安装。</p>
<h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p> <code>npm install -g hexo</code>全局安装hexo。</p>
<p> 报错信息：</p>
<p> Q：<code>npm WARN deprecated titlecase@1.1.2: no longer maintained</code></p>
<p> A：<code>npm -v</code>查看npm版本，<code>npm install -g npm </code>更新版本即可。</p>
<span id="more"></span>

<h4 id="准备github帐号"><a href="#准备github帐号" class="headerlink" title="准备github帐号"></a>准备github帐号</h4><p>注册github帐号</p>
<p>新建一个repository，名称为 <code>yourname.github.io</code>，我的帐号名为<code>e***u</code>，故我的repository为<code>e***u.github.io</code>。</p>
<h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git."></a>安装git.</h4><p> 从<a href="https://git-scm.com/download/win">官网</a>选择64位下载。</p>
<p> 一路默认下一步安装。</p>
<h3 id="创建本地博客"><a href="#创建本地博客" class="headerlink" title="创建本地博客"></a>创建本地博客</h3><h4 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v // 检测node是否正常安装</span><br><span class="line">hexo -v // 检测hexo是否正常安装</span><br><span class="line">npm -v  // 检测npm 是否正常安装</span><br><span class="line">git --version //检测git版本</span><br></pre></td></tr></table></figure>

<h4 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h4>   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\Eden\gitee-blog&gt; hexo init 2021-blog</span><br></pre></td></tr></table></figure>
<p>   执行命令时，报”无法加载文件 C:\Users\ci22578\AppData\Roaming\npm\hexo.ps1，因为在此系统上禁止运行脚本。“。</p>
<p>   以管理员身份运行 powershell, 并执行 set-ExecutionPolicy RemoteSigned 命令，将计算机上的执行策略更改为 RemoteSigned，即可。</p>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\Eden\gitee-blog\2021-blog&gt; hexo s [-p 端口号]  //启动，默认端口4000</span><br></pre></td></tr></table></figure>

<h4 id="修改博客基本信息"><a href="#修改博客基本信息" class="headerlink" title="修改博客基本信息"></a>修改博客基本信息</h4><pre><code>修改博客根目录下的_config.yml文件，后面称站点配置。
</code></pre>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> # Site 博客主配置信息</span><br><span class="line">title: Hexo                             # 博客名称</span><br><span class="line">subtitle: &#x27;一条瞎扑腾的咸鱼&#x27;            # 博客子标题</span><br><span class="line">description: &#x27;一条瞎扑腾的咸鱼&#x27;         # 作者描述</span><br><span class="line">keywords:                               # 站点关键字，用于搜索优化</span><br><span class="line">author: Eden 懒散老马                   # 博主名</span><br><span class="line">language: zh-CN                         # 站点语言</span><br><span class="line">timezone: &#x27;Asia/Shanghai&#x27;               # 时区	 </span><br></pre></td></tr></table></figure>

<h3 id="配置next主题"><a href="#配置next主题" class="headerlink" title="配置next主题"></a>配置next主题</h3><h4 id="下载next主题。"><a href="#下载next主题。" class="headerlink" title="下载next主题。"></a>下载next主题。</h4><p>  git clone <a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a> themes/next</p>
<p>  访问不了也可以在gitee上搜索别人同步过来的。</p>
<p>  如果在博客根目录按上面命令下载，则直接跳过。如果是在其他目录下载，则将下载文件夹更名为next，拖放到博客目录中themes目录下。</p>
<h4 id="应用next主题"><a href="#应用next主题" class="headerlink" title="应用next主题"></a>应用next主题</h4><pre><code>修改站点配置（2021-blog\_config.yml)。
</code></pre>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> # Extensions 扩展信息配置</span><br><span class="line">theme: next	                            # 主题设置为我们的next主题，默认是landscape</span><br></pre></td></tr></table></figure>
<h3 id="next扩展配置。"><a href="#next扩展配置。" class="headerlink" title="next扩展配置。"></a>next扩展配置。</h3><h4 id="主题样式配置"><a href="#主题样式配置" class="headerlink" title="主题样式配置"></a>主题样式配置</h4><pre><code>修改主题目录下的_config.yml配置
</code></pre>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings 菜单设置</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">menu:</span><br><span class="line">home: / || fa fa-home</span><br><span class="line">#about: /about/ || fa fa-user</span><br><span class="line">tags: /tags/ || fa fa-tags</span><br><span class="line">categories: /categories/ || fa fa-th</span><br><span class="line">archives: /archives/ || fa fa-archive</span><br><span class="line">#schedule: /schedule/ || fa fa-calendar</span><br><span class="line">#sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">#commonweal: /404/ || fa fa-heartbeat</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings 样式设置</span><br><span class="line"># --------------------------------------------------------------- </span><br><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces </span><br><span class="line">#scheme: Gemini</span><br><span class="line"></span><br><span class="line"># Dark Mode</span><br><span class="line">darkmode: false</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="隐藏底部next-强力驱动字样。"><a href="#隐藏底部next-强力驱动字样。" class="headerlink" title="隐藏底部next / 强力驱动字样。"></a>隐藏底部next / 强力驱动字样。</h4><p>  themes\next\layout_partials目录中找到footer.njk（不同版本的文件扩展名可能不同）</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用 &lt;!-- --!&gt; 包住下面这段代码 或 直接删除</span><br><span class="line">&lt;!--</span><br><span class="line">&#123;%- if theme.footer.powered %&#125;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;</span><br><span class="line">	&#123;%- set next_site = &#x27;https://theme-next.js.org&#x27; if theme.scheme === &#x27;Gemini&#x27; else &#x27;https://theme-next.js.org/&#x27; + theme.scheme | lower + &#x27;/&#x27; %&#125;</span><br><span class="line">	&#123;&#123;- __(&#x27;footer.powered&#x27;, next_url(&#x27;https://hexo.io&#x27;, &#x27;Hexo&#x27;, &#123;class: &#x27;theme-link&#x27;&#125;) + &#x27; &amp; &#x27; + next_url(next_site, &#x27;NexT.&#x27; + theme.scheme, &#123;class: &#x27;theme-link&#x27;&#125;)) &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br><span class="line">--!&gt;</span><br></pre></td></tr></table></figure>
<h4 id="Local-Search-本地搜索"><a href="#Local-Search-本地搜索" class="headerlink" title="Local Search 本地搜索"></a>Local Search 本地搜索</h4><p>  安装插件 hexo-generator-searchdb</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>  修改根目录_config.yml，添加下面配置到文件末尾。</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>
<p>  修改主题配置_config.yml,启用本地搜索</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local Search</span><br><span class="line"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<h4 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h4><p>  去easyicon找个图标</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon_48px.ico</span><br><span class="line">  medium: /images/favicon_48px.ico</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure>
<h4 id="增加文章字数统计和阅读时长"><a href="#增加文章字数统计和阅读时长" class="headerlink" title="增加文章字数统计和阅读时长"></a>增加文章字数统计和阅读时长</h4><p>  Dependencies: <a href="https://github.com/next-theme/hexo-word-counter">https://github.com/next-theme/hexo-word-counter</a> 目前设置没有生效，后续跟踪查看。</p>
<h4 id="博客加妹子"><a href="#博客加妹子" class="headerlink" title="博客加妹子"></a>博客加妹子</h4><p>  npm install -save hexo-helper-live2d</p>
<p>  修改站点配置文件</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  log: false</span><br><span class="line">  model:</span><br><span class="line">	use: live2d-widget-model-shizuku</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure>
<p>  安装模型，在命令行运行命令：npm install –save live2d-widget-model-shizuku</p>
<pre><code>可选模型：

live2d-widget-model-chitose

live2d-widget-model-epsilon2_1

live2d-widget-model-gf

live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)

live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)

live2d-widget-model-haruto

live2d-widget-model-hibiki

live2d-widget-model-hijiki

live2d-widget-model-izumi

live2d-widget-model-koharu

live2d-widget-model-miku

live2d-widget-model-ni-j

live2d-widget-model-nico

live2d-widget-model-nietzsche

live2d-widget-model-nipsilon

live2d-widget-model-nito

live2d-widget-model-shizuku

live2d-widget-model-tororo

live2d-widget-model-tsumiki

live2d-widget-model-unitychan

live2d-widget-model-wanko

live2d-widget-model-z16
</code></pre>
<h4 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h4><pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">	border_radius: 8   # 按钮圆滑度</span><br><span class="line">	copy_button:  # 设置是否开启代码块复制按钮</span><br><span class="line">		enable: true</span><br><span class="line">		show_result: true  # 是否显示复制成功信息</span><br></pre></td></tr></table></figure>
</code></pre>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>  本文我们从零开始搭建个人本地hexo博客，并使用next主题。后续我们尝试将hexo博客推送至github、gitee等站点。生成我们的博客站。</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul>
<li><a href="https://blog.csdn.net/as480133937/article/details/100138838/">Hexo-Next 主题博客个性化配置超详细，超全面</a></li>
</ul>
]]></content>
      <categories>
        <category>使用hexo搭建博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo（三）使用gitee搭建自己的图床</title>
    <url>/2021/05/11/hexo%EF%BC%88%E4%B8%89%EF%BC%89%E4%BD%BF%E7%94%A8gitee%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h2 id="gitee创建个人repo"><a href="#gitee创建个人repo" class="headerlink" title="gitee创建个人repo"></a>gitee创建个人repo</h2><p>使用gitee创建一个public仓库image_repo</p>
<h2 id="下载picGo"><a href="#下载picGo" class="headerlink" title="下载picGo"></a>下载picGo</h2><p>  <a href="https://molunerfinn.com/PicGo/">官网</a> 下载picGo，windows直接选择exe版本。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210511164334718.png" alt="image-20210511164334718"></p>
<p>下载完成，傻瓜安装完成即可。</p>
<span id="more"></span>

<h3 id="创建私人令牌"><a href="#创建私人令牌" class="headerlink" title="创建私人令牌"></a>创建私人令牌</h3><p>头像 –&gt; 设置 –&gt; 私人令牌 –&gt; 生成令牌</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210511164833637.png" alt="image-20210511164833637"></p>
<p>输入密码，生成令牌，复制后面备用。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210511164930817.png" alt="image-20210511164930817"></p>
<p>如果没有复制下来，可以点击修改，重新生成一个。</p>
<h3 id="picGo配置"><a href="#picGo配置" class="headerlink" title="picGo配置"></a>picGo配置</h3><ul>
<li><p>安装gitee插件</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210511165157933.png" alt="image-20210511165157933"></p>
<p>安装后重新打开软件，图床设置，找到gitee菜单。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210511165510260.png" alt="image-20210511165510260"></p>
<p>repo设置右上角圈出的部分。token使用我们上面生成的令牌。然后确定，并设置为默认图床。</p>
</li>
<li><p>使用</p>
<p>接下来就可以使用picGo上传图片了。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210511165940775.png" alt="image-20210511165940775"></p>
<p>上传区上传图片，相册菜单负责管理图片。</p>
</li>
</ul>
<h3 id="Typora配置picGo"><a href="#Typora配置picGo" class="headerlink" title="Typora配置picGo"></a>Typora配置picGo</h3><blockquote>
<p>typoRa是一个极致简洁的markdown编辑器，即时渲染。</p>
</blockquote>
<p>下载链接: <a href="https://www.typora.io/#windows">https://www.typora.io/#windows</a></p>
<p>一路默认安装，打开软件后，文件 –&gt; 偏好设置。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210511170603136.png" alt="image-20210511170603136"></p>
<p>根据图中配置后，可以验证图片上传。出现下图即为配置成功。</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210511170650016.png" alt="image-20210511170650016"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>到此一个免费的博客图床就配置好了。</p>
]]></content>
      <categories>
        <category>使用hexo搭建博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo（二）:将博客推送至github</title>
    <url>/2021/05/11/hexo%EF%BC%88%E4%BA%8C%EF%BC%89%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%8E%A8%E9%80%81%E5%88%B0github/</url>
    <content><![CDATA[<h3 id="操作步骤。"><a href="#操作步骤。" class="headerlink" title="操作步骤。"></a>操作步骤。</h3><p> 登录github，并创建public仓库。</p>
<p> 仓库名命名格式：如果帐号名为<code>jack</code>，则repository为<code>jack.github.io</code></p>
<h3 id="安装deploy扩展"><a href="#安装deploy扩展" class="headerlink" title="安装deploy扩展"></a>安装deploy扩展</h3><p>在跟目录(2021-blog)内，执行<code>npm install hexo-deployer-git --save</code> 安装部署的扩展。</p>
<h3 id="修改站点配置"><a href="#修改站点配置" class="headerlink" title="修改站点配置"></a>修改站点配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:jack/jack.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h3><p> 根目录下使用 hexo d -g 即可将项目推送至github远程仓库。</p>
<p> 快使用jack.github.io看看能不能访问了？</p>
<h3 id="github添加免密"><a href="#github添加免密" class="headerlink" title="github添加免密"></a>github添加免密</h3><p> 本地生成ssh秘钥文件</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 检查是否存在</span><br><span class="line">cd ~/.ssh</span><br><span class="line">ls</span><br><span class="line">// 生成密钥，一路回车即可</span><br><span class="line">ssh-keygen -t rsa -C “m***n_11@126.com” </span><br></pre></td></tr></table></figure>
<p> github网站，头像-&gt; settings-&gt; SSH and GPG keys -&gt; New SSh Key </p>
<p> 将电脑上C:\Users.ssh 中的id_rsa.pub中的内容 复制到key中，title自定义即可。</p>
<p> 添加完毕后，本地命令行 输入 ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;">&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;</a> 测试下链接，当看到</p>
<p> <code>Hi jack! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></p>
<p> 说明配置成功，再推送就可以免密推送了。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>  我最终配置没有成功，发现我本地deploy文件里的配置是https的，因为免密是ssh的，所以地址一定要使用<a href="mailto:&#x67;&#x69;&#116;&#x40;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#x69;&#116;&#x40;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;</a>:jack/jack.github.io.git这种。</p>
<pre><code>修改后推送成功。
</code></pre>
]]></content>
      <categories>
        <category>使用hexo搭建博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>优秀的博客地址整理</title>
    <url>/2021/05/24/%E4%BC%98%E7%A7%80%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><p>[<a href="https://pdai.tech/">Java 全栈知识体系</a>]</p>
<p>[<a href="https://blog.csdn.net/sudadaipeng1">上面博客的博主CSDN</a>]</p>
<p>[<a href="https://www.fangzhipeng.com/">方志朋的专栏</a>]</p>
<p>[<a href="https://blog.csdn.net/qq_36850813">Java服务端妹子的CSDN</a>]</p>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>[<a href="https://backlog.com/git-tutorial/cn/">猴子都能懂的GIT入门</a>]</p>
<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>[<a href="https://blog.csdn.net/Eastmount">一个教书的程序员-杨秀璋</a>]</p>
<h3 id="不好归类"><a href="#不好归类" class="headerlink" title="不好归类"></a>不好归类</h3><p>[<a href="https://blog.csdn.net/chushoufengli">比较杂的一个博客CSDN</a>]</p>
<p>[<a href="https://chenyu.blog.csdn.net/article/details/79449026">优秀博客汇总地址</a>]</p>
]]></content>
  </entry>
  <entry>
    <title>SpringCloud学习 | 第六篇 Gateway + Spring Security + OAuth2 + JWT实现微服务统一认证授权</title>
    <url>/2021/05/20/SpringCloud%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%85%AD%EF%BC%89%20OAuth2+JWT%E5%AE%9E%E7%8E%B0%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%9F%E4%B8%80%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83/</url>
    <content><![CDATA[<h3 id="OAuth2-与-JWT"><a href="#OAuth2-与-JWT" class="headerlink" title="OAuth2 与 JWT"></a>OAuth2 与 JWT</h3><h4 id="OAuth2"><a href="#OAuth2" class="headerlink" title="OAuth2"></a>OAuth2</h4><p>简单些说就是这套协议包含两个核心角色，认证服务器和资源服务器。</p>
<p>在我们的微服务结构中，网关对应资源服务，auth对应认证服务。</p>
<table>
<thead>
<tr>
<th>模块名</th>
<th>模块作用</th>
<th>OAuth2角色</th>
<th>服务地址</th>
</tr>
</thead>
<tbody><tr>
<td>ruipin-gateway</td>
<td>网关</td>
<td>资源服务器</td>
<td>localhost:9999</td>
</tr>
<tr>
<td>ruipin-auth</td>
<td>认证中心</td>
<td>认证服务器</td>
<td>localhost:8000</td>
</tr>
</tbody></table>
<h4 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h4><p>JWT(JSON Web Token)，一个无状态的token，本身携带用户的信息。</p>
<p>JWT字符串由Header、Payload、Signature三部分组成。</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Header: Json对象，描述JWT的元数据，alg属性表示算法签名，type标识token类型</span><br><span class="line">Payload：Json对象，重要部分，除默认字段，还可以扩展自定义字段，比如用户ID、姓名、角色等。</span><br><span class="line">Signature：对Header、Payload两部分签名，认证服务器私钥签名，然后资源服务器用公钥验签，防止数据篡改。</span><br></pre></td></tr></table></figure>

<p>JWT相比传统Cookie/Session会话管理的重要优势就在于无状态、去中心化，所以JWT更适合分布式场景。</p>
<h4 id="OAuth2与JWT的关系"><a href="#OAuth2与JWT的关系" class="headerlink" title="OAuth2与JWT的关系"></a>OAuth2与JWT的关系</h4><p>OAuth2是认证授权的协议规范。</p>
<p>JWT是基于token的安全认证协议的实现。</p>
<p>OAuth2认证服务器签发的token可以使用JWT实现，JWT轻量且安全。</p>
<h4 id="OAuth2四种授权模式"><a href="#OAuth2四种授权模式" class="headerlink" title="OAuth2四种授权模式"></a>OAuth2四种授权模式</h4><ul>
<li>Authorization Code（授权码模式）：正宗的OAuth2的授权模式，客户端先将用户导向认证服务器，登录后获取授权码，然后进行授权，最后根据授权码获取访问令牌</li>
<li>Implicit（简化模式）：和授权码模式相比，取消了获取授权码的过程，直接获取访问令牌；</li>
<li>Resource Owner Password Credentials（密码模式）：客户端直接向用户获取用户名和密码，之后向认证服务器获取访问令牌；</li>
<li>Client Credentials（客户端模式）：客户端直接通过客户端认证（比如client_id和client_secret）从认证服务器获取访问令牌。</li>
</ul>
<p>此处我们主要选择密码模式</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210520104647787.png" alt="image-20210520104647787"></p>
<ul>
<li>客户端从用户获取用户名和密码。</li>
<li>客户端通过用户名和密码访问认证服务器。</li>
<li>认证服务器返回访问令牌。</li>
</ul>
<h3 id="SpringCloud整合OAuth2和JWT"><a href="#SpringCloud整合OAuth2和JWT" class="headerlink" title="SpringCloud整合OAuth2和JWT"></a>SpringCloud整合OAuth2和JWT</h3><p>涉及到的服务主要有：</p>
<table>
<thead>
<tr>
<th>模块</th>
<th>端口</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Nacos servr</td>
<td>8848</td>
<td>注册中心</td>
</tr>
<tr>
<td>ruipin-sys</td>
<td>8060</td>
<td>服务提供方</td>
</tr>
<tr>
<td>ruipin-sys-api</td>
<td>–</td>
<td>服务API</td>
</tr>
<tr>
<td>ruipin-auth</td>
<td>8000</td>
<td>认证服务器</td>
</tr>
<tr>
<td>ruipin-gateway</td>
<td>9999</td>
<td>网关服务器+资源服务器</td>
</tr>
</tbody></table>
<p>这里大致梳理下认证的一个简单流程：</p>
<ul>
<li>前端请求 <a href="http://ip:9999/auth/oauth/token%E6%9C%8D%E5%8A%A1%E8%8E%B7%E5%8F%96token%E3%80%82">http://ip:9999/auth/oauth/token服务获取token。</a><ul>
<li>请求auth，auth先判断client是否有效，再调用用户模块验证用户是否存在，</li>
<li>存在，则将用户信息（基本信息+角色权限信息）写入token</li>
</ul>
</li>
<li>前端携带token访问<a href="http://ip:9999/sys/serviceA/%E6%9C%8D%E5%8A%A1%E8%AE%BF%E9%97%AE%E5%85%B7%E4%BD%93%E6%9C%8D%E5%8A%A1%E3%80%82">http://ip:9999/sys/serviceA/服务访问具体服务。</a></li>
<li>网关根据token 解析，判断用户是否有权限访问接口。如有，则转发请求到sys服务，如无则返回无权限。</li>
</ul>
<h4 id="ruipin-sys"><a href="#ruipin-sys" class="headerlink" title="ruipin-sys"></a>ruipin-sys</h4><p>目前主要提供3个功能：</p>
<ol>
<li>提供获取用户信息接口，用于获取token时的鉴权。</li>
<li>提供获取用户信息接口，用于后面用户携带token的鉴权测试。（此处我是偷懒用了同一个接口）</li>
<li>提供初始化角色权限job，项目启动时redis缓存 各接口所需角色信息，便于2的鉴权。</li>
</ol>
<h5 id="pom依赖"><a href="#pom依赖" class="headerlink" title="pom依赖"></a>pom依赖</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- SpringCloud从2020版本后对配置文件加载进行了重构，</span></span><br><span class="line"><span class="comment">        默认不加载bootstrap配置文件，添加bootstrap依赖解决该问题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 注册中心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置中心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ruipin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ruipin-sys-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ruipin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ruipin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common-mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ruipin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ruipin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ruipin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8060</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruipin-sys</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://49.4.78.75:3306/ruipin_test?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">ruipintest</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">pass@word1</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">http://localhost:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">$&#123;spring.cloud.nacos.discovery.server-addr&#125;</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapping/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 驼峰下划线转换</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 这个配置会将执行的sql打印出来，在开发或测试的时候可以用</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure>

<p>这里可以使用Mybatis-Plus Generator插件，对应数据库生成mybatis相关代码。我们这里暂时都是写死的逻辑，所以可以不需要。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 因为我们写死逻辑，所以配置目前不必需</span><br><span class="line">@Configuration</span><br><span class="line">@MapperScan(&quot;com.ruipin.sys.mapper&quot;)</span><br><span class="line">public class MybatisConfig &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>提供一个获取用户信息的接口：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/userAccount&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAccountController</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 接口直接构建了一个用户对象，密码根据目前的配置使用的BCypt加密的123456</span></span><br><span class="line"><span class="comment">	 * 该用户拥有ADMIN角色</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/username/&#123;username&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getUserAccountByUsername</span><span class="params">(<span class="meta">@PathVariable</span> String username)</span></span>&#123;</span><br><span class="line">        AccountDto account = <span class="keyword">new</span> AccountDto();</span><br><span class="line">        account.setId(<span class="number">1l</span>);</span><br><span class="line">        account.setUsername(username);</span><br><span class="line">        account.setPassword(<span class="string">&quot;$2a$10$cnaQ7AbWqzEs9EFg59xO5eLqJcs4..BY7mCI8pEQ6Cu.iF2YHPV.m&quot;</span>);</span><br><span class="line">        account.setRoles(Arrays.asList(<span class="string">&quot;ADMIN&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> Result.success(account);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>建一个Job，在项目启动时加载缓存信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">@Slf4j</span><br><span class="line">public class InitPermissionJob implements CommandLineRunner &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void run(String... args) throws Exception &#123;</span><br><span class="line">        refreshFrontMenuCache();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    @Override</span><br><span class="line">    public boolean refreshFrontMenuCache() &#123;</span><br><span class="line">    	// 此处也是写死的逻辑，稍后调试通以后可以接入Mybatis数据库</span><br><span class="line">        redisTemplate.delete(RedisKeys.RESOURCE_ROLES_MAP);</span><br><span class="line">        Map&lt;String, List&lt;String&gt;&gt; map = new TreeMap&lt;&gt;();</span><br><span class="line">        map.put(&quot;/sys/**&quot;, CollUtil.toList(&quot;ROLE_ADMIN&quot;)); // ROLE_是jwt</span><br><span class="line">        redisTemplate.opsForHash().putAll(RedisKeys.RESOURCE_ROLES_MAP, map);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>建立启动类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">public class SysApplication &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(SysApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ruipin-sys-api"><a href="#ruipin-sys-api" class="headerlink" title="ruipin-sys-api"></a>ruipin-sys-api</h4><h5 id="pom依赖-1"><a href="#pom依赖-1" class="headerlink" title="pom依赖"></a>pom依赖</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 远程调用HTTP客户端 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- openfeign依赖 1. http客户端选择okhttp 2. loadbalancer替换ribbon --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-okhttp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="feign接口"><a href="#feign接口" class="headerlink" title="feign接口"></a>feign接口</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@FeignClient(name=&quot;ruipin-sys&quot;, contextId = &quot;account&quot;)</span><br><span class="line">public interface AccountFeignClient &#123;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/userAccount/username/&#123;username&#125;&quot;)</span><br><span class="line">    Result&lt;AccountDto&gt; getUserAccountByUsername(@PathVariable String username);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">@NoArgsConstructor</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">public class AccountDto &#123;</span><br><span class="line"></span><br><span class="line">    private Long id;</span><br><span class="line">    private String username;</span><br><span class="line">    private String password;</span><br><span class="line">    private List&lt;String&gt; roles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ruipin-auth"><a href="#ruipin-auth" class="headerlink" title="ruipin-auth"></a>ruipin-auth</h4><p>auth主要有以下几个：</p>
<p>​    JwtTokenEnhancer： JWT增强配置</p>
<p>   AuthorizationServerConfig 认证核心配置</p>
<p>   WebSecurityConfig  访问核心配置</p>
<p>   AuthController 提供获取token接口</p>
<p>   PublicKeyController 提供公钥获取接口</p>
<p>   SecurityUser 提供token鉴权的用户信息</p>
<p>   UserDetailServiceImpl 前期用户查询</p>
<h5 id="pom依赖-2"><a href="#pom依赖-2" class="headerlink" title="pom依赖"></a>pom依赖</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;!-- SpringCloud从2020版本后对配置文件加载进行了重构，</span><br><span class="line">    默认不加载bootstrap配置文件，添加bootstrap依赖解决该问题 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-bootstrap&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-loadbalancer&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- 注册中心 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- nacos-config 配置中心依赖--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- OAuth2 认证服务器--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.security.oauth.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-security-oauth2-autoconfigure&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-security-oauth2-jose&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.ruipin&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;common-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;ruipin.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.ruipin&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;ruipin-demo-api&lt;/artifactId&gt;</span><br><span class="line">   		&lt;version&gt;$&#123;ruipin.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.ruipin&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;ruipin-sys-api&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;ruipin.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.ruipin&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;common-mybatis&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;ruipin.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>

<h5 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruipin-auth</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3307/ruipin_2021?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;autoReconnect=true</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">http://127.0.0.1:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span>      <span class="comment"># 默认值 properties</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">DEFAULT_GROUP</span>      <span class="comment"># 默认值 DEFAULT_GROUP</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="attr">example:</span></span><br><span class="line">  <span class="attr">hello-word:</span> <span class="string">Hello</span> <span class="string">Ruipin</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">okhttp:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h5 id="AuthorizationServerConfig"><a href="#AuthorizationServerConfig" class="headerlink" title="AuthorizationServerConfig"></a>AuthorizationServerConfig</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAuthorizationServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorizationServerConfig</span> <span class="keyword">extends</span> <span class="title">AuthorizationServerConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> UserDetailServiceImpl userDetailsService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AuthenticationManager authenticationManager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> JwtTokenEnhancer jwtTokenEnhancer;</span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(ClientDetailsServiceConfigurer clients)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        clients.inMemory()</span><br><span class="line">            .withClient(<span class="string">&quot;client-app&quot;</span>)<span class="comment">//配置client_id</span></span><br><span class="line">            .secret(passwordEncoder.encode(<span class="string">&quot;123456&quot;</span>))<span class="comment">//配置client_secret</span></span><br><span class="line">            .scopes(<span class="string">&quot;all&quot;</span>)<span class="comment">//配置申请的权限范围</span></span><br><span class="line">            .authorizedGrantTypes(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;refresh_token&quot;</span>)</span><br><span class="line">            <span class="comment">//配置grant_type，表示授权类型</span></span><br><span class="line">            .accessTokenValiditySeconds(<span class="number">3600</span>)<span class="comment">//配置访问token的有效期</span></span><br><span class="line">            .refreshTokenValiditySeconds(<span class="number">86400</span>);<span class="comment">//配置刷新token的有效期</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密码模式需要配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endpoints</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthorizationServerEndpointsConfigurer endpoints)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        TokenEnhancerChain enhancerChain = <span class="keyword">new</span> TokenEnhancerChain();</span><br><span class="line">        List&lt;TokenEnhancer&gt; delegates = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        delegates.add(jwtTokenEnhancer);</span><br><span class="line">        delegates.add(accessTokenConverter());</span><br><span class="line">        enhancerChain.setTokenEnhancers(delegates); <span class="comment">//配置JWT的内容增强器</span></span><br><span class="line">        endpoints.authenticationManager(authenticationManager)</span><br><span class="line">                .userDetailsService(userDetailsService) <span class="comment">//配置加载用户信息的服务</span></span><br><span class="line">                .accessTokenConverter(accessTokenConverter())</span><br><span class="line">                .tokenEnhancer(enhancerChain);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthorizationServerSecurityConfigurer security)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        security.allowFormAuthenticationForClients();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JwtAccessTokenConverter <span class="title">accessTokenConverter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JwtAccessTokenConverter jwtAccessTokenConverter = <span class="keyword">new</span> JwtAccessTokenConverter();</span><br><span class="line">        jwtAccessTokenConverter.setKeyPair(keyPair());</span><br><span class="line">        <span class="keyword">return</span> jwtAccessTokenConverter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> KeyPair <span class="title">keyPair</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        KeyStoreKeyFactory factory = <span class="keyword">new</span> KeyStoreKeyFactory(<span class="keyword">new</span> 	          ClassPathResource(<span class="string">&quot;ruipin.jks&quot;</span>), <span class="string">&quot;123456&quot;</span>.toCharArray());</span><br><span class="line">        <span class="keyword">return</span> factory.getKeyPair(<span class="string">&quot;ruipin&quot;</span>, <span class="string">&quot;rui_pin2021&quot;</span>.toCharArray());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="WebSecurityConfig"><a href="#WebSecurityConfig" class="headerlink" title="WebSecurityConfig"></a>WebSecurityConfig</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .requestMatchers(EndpointRequest.toAnyEndpoint()).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/rsa/publicKey&quot;</span>).permitAll()</span><br><span class="line">                .anyRequest().authenticated();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthenticationManager <span class="title">authenticationManagerBean</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.authenticationManagerBean();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="AuthController与PublicKeyController"><a href="#AuthController与PublicKeyController" class="headerlink" title="AuthController与PublicKeyController"></a>AuthController与PublicKeyController</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/oauth&quot;)</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TokenEndpoint tokenEndpoint;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/token&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OAuth2AccessToken <span class="title">postAccessToken</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            Principal principal,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@RequestParam</span> Map&lt;String, String&gt; parameters</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span> <span class="keyword">throws</span> HttpRequestMethodNotSupportedException </span>&#123;</span><br><span class="line">        OAuth2AccessToken oAuth2AccessToken;</span><br><span class="line"></span><br><span class="line">        oAuth2AccessToken = tokenEndpoint.postAccessToken(principal, parameters).getBody();</span><br><span class="line">        <span class="keyword">return</span> oAuth2AccessToken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PublicKeyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> KeyPair keyPair;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/rsa/publicKey&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">loadPublicKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RSAPublicKey publicKey = (RSAPublicKey) keyPair.getPublic();</span><br><span class="line">        RSAKey key = <span class="keyword">new</span> RSAKey.Builder(publicKey).build();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JWKSet(key).toJSONObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="SecurityUser"><a href="#SecurityUser" class="headerlink" title="SecurityUser"></a>SecurityUser</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityUser</span> <span class="keyword">implements</span> <span class="title">UserDetails</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String clientId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Collection&lt;SimpleGrantedAuthority&gt; authorities;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SecurityUser</span><span class="params">(AccountDto account)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setId(account.getId());</span><br><span class="line">        <span class="keyword">this</span>.setUsername(account.getUsername());</span><br><span class="line"><span class="comment">//        this.setPassword(AuthConstants.BCRYPT + account.getPassword());</span></span><br><span class="line">        <span class="keyword">this</span>.setPassword(account.getPassword());</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtil.isNotEmpty(account.getRoles())) &#123;</span><br><span class="line">            authorities = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            account.getRoles().forEach(roleId -&gt; authorities.add(<span class="keyword">new</span> SimpleGrantedAuthority(String.valueOf(roleId))));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCredentialsNonExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="UserDetailServiceImpl"><a href="#UserDetailServiceImpl" class="headerlink" title="UserDetailServiceImpl"></a>UserDetailServiceImpl</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDetailServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountFeignClient accountFeignClient;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line">    <span class="keyword">private</span> List&lt;AccountDto&gt; userList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException</span>&#123;</span><br><span class="line">        AccountDto accountDto = <span class="keyword">new</span> AccountDto();</span><br><span class="line">        Result result = accountFeignClient.getUserAccountByUsername(username);</span><br><span class="line">        log.info(<span class="string">&quot;获取用户信息:&#123;&#125;&quot;</span>, result);</span><br><span class="line">        <span class="keyword">if</span> (ResultCode.SUCCESS.getCode().equals(result.getCode())) &#123;</span><br><span class="line">            accountDto = (AccountDto) result.getData();</span><br><span class="line">            securityUser = <span class="keyword">new</span> SecurityUser(accountDto);</span><br><span class="line">        &#125;</span><br><span class="line">        securityUser = <span class="keyword">new</span> SecurityUser(accountDto);</span><br><span class="line">        <span class="keyword">return</span> securityUser;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="JWT增强"><a href="#JWT增强" class="headerlink" title="JWT增强"></a>JWT增强</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * JWT内容增强器</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class JwtTokenEnhancer implements TokenEnhancer &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public OAuth2AccessToken enhance(OAuth2AccessToken accessToken, OAuth2Authentication authentication) &#123;</span><br><span class="line">        SecurityUser securityUser = (SecurityUser) authentication.getPrincipal();</span><br><span class="line">        Map&lt;String, Object&gt; info = new HashMap&lt;&gt;();</span><br><span class="line">        //把用户ID设置到JWT中</span><br><span class="line">        info.put(&quot;id&quot;, securityUser.getId());</span><br><span class="line">        ((DefaultOAuth2AccessToken) accessToken).setAdditionalInformation(info);</span><br><span class="line">        return accessToken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(AuthApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ruipin-gateway"><a href="#ruipin-gateway" class="headerlink" title="ruipin-gateway"></a>ruipin-gateway</h4><h5 id="pom依赖-3"><a href="#pom依赖-3" class="headerlink" title="pom依赖"></a>pom依赖</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;!-- SpringCloud从2020版本后对配置文件加载进行了重构，</span><br><span class="line">    默认不加载bootstrap配置文件，添加bootstrap依赖解决该问题 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-bootstrap&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- 2020Cloud版本，不加该依赖可能在路由转发时会报503 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-loadbalancer&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 注册中心 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- oauth2 资源服务器--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-security-config&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-security-oauth2-resource-server&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-security-oauth2-jose&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.ruipin&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;common-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.ruipin&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;common-redis&lt;/artifactId&gt;</span><br><span class="line">    	&lt;version&gt;1.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>

<h5 id="配置文件-2"><a href="#配置文件-2" class="headerlink" title="配置文件"></a>配置文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 9999</span><br><span class="line"></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: ruipin-gateway</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      # 注册中心</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: http://127.0.0.1:8848</span><br><span class="line">      # 配置中心</span><br><span class="line">      config:</span><br><span class="line">        server-addr: $&#123;spring.cloud.nacos.discovery.server-addr&#125;</span><br><span class="line">        file-extension: yaml</span><br><span class="line">    gateway:</span><br><span class="line">      discovery:</span><br><span class="line">        locator:</span><br><span class="line">          enabled: true  # 启用动根据服务id生成路由</span><br><span class="line">          lower-case-service-id: true # 设置路由的路径为小写的服务ID</span><br><span class="line">      routes:</span><br><span class="line">        - id: auth-route</span><br><span class="line">          uri: lb://ruipin-auth</span><br><span class="line">          predicates:</span><br><span class="line">            - Path=/auth/**  # 根据路径进行匹配，所有/auth/**开头的请求都会转发到 lb://ruipin-auth</span><br><span class="line">          filters:</span><br><span class="line">            - StripPrefix=1 # 移除前缀 /auth</span><br><span class="line">        - id: sys-route</span><br><span class="line">          uri: lb://ruipin-sys</span><br><span class="line">          predicates:</span><br><span class="line">            - Path=/sys/**</span><br><span class="line">          filters:</span><br><span class="line">            - StripPrefix=1 # 移除前缀 /sys</span><br><span class="line">  security:</span><br><span class="line">    oauth2:</span><br><span class="line">      resourceserver:</span><br><span class="line">        jwt:</span><br><span class="line">          jwk-set-uri: &#x27;http://localhost:8000/rsa/publicKey&#x27;</span><br><span class="line">white-list:</span><br><span class="line">  urls:</span><br><span class="line">    - &quot;/auth/oauth/token&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="ResourceServerConfig"><a href="#ResourceServerConfig" class="headerlink" title="ResourceServerConfig"></a>ResourceServerConfig</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.ruipin.gateway.config;</span><br><span class="line"></span><br><span class="line">import cn.hutool.core.util.ArrayUtil;</span><br><span class="line">import com.ruipin.common.constant.AuthConstants;</span><br><span class="line">import com.ruipin.common.result.ResultCode;</span><br><span class="line">import com.ruipin.gateway.security.AuthorizationManager;</span><br><span class="line">import com.ruipin.gateway.util.WebUtils;</span><br><span class="line">import lombok.AllArgsConstructor;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.core.convert.converter.Converter;</span><br><span class="line">import org.springframework.security.authentication.AbstractAuthenticationToken;</span><br><span class="line">import org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;</span><br><span class="line">import org.springframework.security.config.web.server.ServerHttpSecurity;</span><br><span class="line">import org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line">import org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;</span><br><span class="line">import org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;</span><br><span class="line">import org.springframework.security.oauth2.server.resource.authentication.ReactiveJwtAuthenticationConverterAdapter;</span><br><span class="line">import org.springframework.security.web.server.SecurityWebFilterChain;</span><br><span class="line">import org.springframework.security.web.server.ServerAuthenticationEntryPoint;</span><br><span class="line">import org.springframework.security.web.server.authorization.ServerAccessDeniedHandler;</span><br><span class="line">import reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 资源服务器配置</span><br><span class="line"> */</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">@Configuration</span><br><span class="line">@EnableWebFluxSecurity</span><br><span class="line">public class ResourceServerConfig &#123;</span><br><span class="line"></span><br><span class="line">    private AuthorizationManager authorizationManager;</span><br><span class="line">    private WhiteListConfig whiteListConfig;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public SecurityWebFilterChain securityWebFilterChain(ServerHttpSecurity http) &#123;</span><br><span class="line">        http.oauth2ResourceServer().jwt()</span><br><span class="line">                .jwtAuthenticationConverter(jwtAuthenticationConverter());</span><br><span class="line">        //自定义处理JWT请求头过期或签名错误的结果</span><br><span class="line">        http.oauth2ResourceServer().authenticationEntryPoint(authenticationEntryPoint());</span><br><span class="line">        //处理白名单请求</span><br><span class="line">        http.authorizeExchange()</span><br><span class="line">                .pathMatchers(ArrayUtil.toArray(whiteListConfig.getUrls(), String.class)).permitAll()</span><br><span class="line">                .anyExchange().access(authorizationManager)//鉴权管理器配置</span><br><span class="line">                .and()</span><br><span class="line">                .exceptionHandling()</span><br><span class="line">                .accessDeniedHandler(accessDeniedHandler()) // 处理未授权</span><br><span class="line">                .authenticationEntryPoint(authenticationEntryPoint()) //处理未认证</span><br><span class="line">                .and().csrf().disable();</span><br><span class="line">        return http.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 未授权</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    ServerAccessDeniedHandler accessDeniedHandler() &#123;</span><br><span class="line">        return (exchange, denied) -&gt; &#123;</span><br><span class="line">            Mono&lt;Void&gt; mono = Mono.defer(() -&gt; Mono.just(exchange.getResponse()))</span><br><span class="line">                    .flatMap(response -&gt; WebUtils.writeFailedToResponse(response, ResultCode.ACCESS_UNAUTHORIZED));</span><br><span class="line">            return mono;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * token无效或者已过期自定义响应</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    ServerAuthenticationEntryPoint authenticationEntryPoint() &#123;</span><br><span class="line">        return (exchange, e) -&gt; &#123;</span><br><span class="line">            Mono&lt;Void&gt; mono = Mono.defer(() -&gt; Mono.just(exchange.getResponse()))</span><br><span class="line">                    .flatMap(response -&gt; WebUtils.writeFailedToResponse(response,ResultCode.TOKEN_INVALID_OR_EXPIRED));</span><br><span class="line">            return mono;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @return</span><br><span class="line">     * @link https://blog.csdn.net/qq_24230139/article/details/105091273</span><br><span class="line">     * ServerHttpSecurity没有将jwt中authorities的负载部分当做Authentication</span><br><span class="line">     * 需要把jwt的Claim中的authorities加入</span><br><span class="line">     * 方案：重新定义R 权限管理器，默认转换器JwtGrantedAuthoritiesConverter</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public Converter&lt;Jwt, ? extends Mono&lt;? extends AbstractAuthenticationToken&gt;&gt; jwtAuthenticationConverter() &#123;</span><br><span class="line">        JwtGrantedAuthoritiesConverter jwtGrantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();</span><br><span class="line">        jwtGrantedAuthoritiesConverter.setAuthorityPrefix(AuthConstants.AUTHORITY_PREFIX);</span><br><span class="line">        jwtGrantedAuthoritiesConverter.setAuthoritiesClaimName(AuthConstants.JWT_AUTHORITIES_KEY);</span><br><span class="line"></span><br><span class="line">        JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();</span><br><span class="line">        jwtAuthenticationConverter.setJwtGrantedAuthoritiesConverter(jwtGrantedAuthoritiesConverter);</span><br><span class="line">        return new ReactiveJwtAuthenticationConverterAdapter(jwtAuthenticationConverter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="WhiteListConfig"><a href="#WhiteListConfig" class="headerlink" title="WhiteListConfig"></a>WhiteListConfig</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Data</span><br><span class="line">@Configuration</span><br><span class="line">@ConfigurationProperties(prefix = &quot;whitelist&quot;)</span><br><span class="line">public class WhiteListConfig &#123;</span><br><span class="line"></span><br><span class="line">    private List&lt;String&gt; urls;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="AuthorizationManager"><a href="#AuthorizationManager" class="headerlink" title="AuthorizationManager"></a>AuthorizationManager</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">@Slf4j</span><br><span class="line">public class AuthorizationManager implements ReactiveAuthorizationManager&lt;AuthorizationContext&gt; &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Mono&lt;AuthorizationDecision&gt; check(Mono&lt;Authentication&gt; mono, AuthorizationContext authorizationContext) &#123;</span><br><span class="line"></span><br><span class="line">        ServerHttpRequest request = authorizationContext.getExchange().getRequest();</span><br><span class="line">        String restPath = request.getMethodValue() + &quot;_&quot; + request.getURI().getPath();</span><br><span class="line">        log.info(&quot;请求路径：&#123;&#125;&quot;, restPath);</span><br><span class="line">        PathMatcher pathMatcher = new AntPathMatcher();</span><br><span class="line">        // 对应跨域的预检请求直接放行</span><br><span class="line">        if (request.getMethod() == HttpMethod.OPTIONS) &#123;</span><br><span class="line">            return Mono.just(new AuthorizationDecision(true));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">//        // 非管理端路径无需鉴权直接放行</span><br><span class="line">//        if (!pathMatcher.match(AuthConstants.ADMIN_URL_PATTERN, restPath)) &#123;</span><br><span class="line">//            log.info(&quot;请求无需鉴权，请求路径：&#123;&#125;&quot;, restPath);</span><br><span class="line">//            return Mono.just(new AuthorizationDecision(true));</span><br><span class="line">//        &#125;</span><br><span class="line"></span><br><span class="line">        // 从缓存取资源权限角色关系列表</span><br><span class="line">        Map&lt;Object, Object&gt; permissionRoles = redisTemplate.opsForHash().entries(RedisKeys.RESOURCE_ROLES_MAP);</span><br><span class="line">        Iterator&lt;Object&gt; iterator = permissionRoles.keySet().iterator();</span><br><span class="line">        // 请求路径匹配到的资源需要的角色权限集合authorities统计</span><br><span class="line">        Set&lt;String&gt; authorities = new HashSet&lt;&gt;();</span><br><span class="line">        while (iterator.hasNext()) &#123;</span><br><span class="line">            String pattern = (String) iterator.next();</span><br><span class="line">            if (pathMatcher.match(pattern, request.getURI().getPath())) &#123;</span><br><span class="line">                authorities.addAll(Convert.toList(String.class, permissionRoles.get(pattern)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Mono&lt;AuthorizationDecision&gt; authorizationDecisionMono = mono</span><br><span class="line">                .filter(Authentication::isAuthenticated)</span><br><span class="line">                .flatMapIterable(Authentication::getAuthorities)</span><br><span class="line">                .map(GrantedAuthority::getAuthority)</span><br><span class="line">                .any(roleId -&gt; &#123;</span><br><span class="line">                    // roleId是请求用户的角色(格式:ROLE_&#123;roleId&#125;)，authorities是请求资源所需要角色的集合</span><br><span class="line">                    log.info(&quot;访问路径：&#123;&#125;&quot;, request.getURI().getPath());</span><br><span class="line">                    log.info(&quot;用户角色：&#123;&#125;&quot;, roleId);</span><br><span class="line">                    log.info(&quot;资源需要角色：&#123;&#125;&quot;, authorities);</span><br><span class="line">                    return authorities.contains(roleId);</span><br><span class="line">                &#125;)</span><br><span class="line">                .map(AuthorizationDecision::new)</span><br><span class="line">                .defaultIfEmpty(new AuthorizationDecision(false));</span><br><span class="line">        return authorizationDecisionMono;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="WebUtils"><a href="#WebUtils" class="headerlink" title="WebUtils"></a>WebUtils</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">public class WebUtils &#123;</span><br><span class="line"></span><br><span class="line">    public static Mono writeFailedToResponse(ServerHttpResponse response, ResultCode resultCode)&#123;</span><br><span class="line">        response.setStatusCode(HttpStatus.OK);</span><br><span class="line">        response.getHeaders().set(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE);</span><br><span class="line">        response.getHeaders().set(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);</span><br><span class="line">        response.getHeaders().set(&quot;Cache-Control&quot;, &quot;no-cache&quot;);</span><br><span class="line">        String body = JSONUtil.toJsonStr(Result.failed(resultCode));</span><br><span class="line">        DataBuffer buffer = response.bufferFactory().wrap(body.getBytes(Charset.forName(&quot;UTF-8&quot;)));</span><br><span class="line">        return response.writeWith(Mono.just(buffer))</span><br><span class="line">                .doOnError(error -&gt; DataBufferUtils.release(buffer));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="启动类-1"><a href="#启动类-1" class="headerlink" title="启动类"></a>启动类</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">public class GatewayApplication &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(GatewayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>启动nacos、sys、auth和gateway服务。</p>
<p>检查redis</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210520115808394.png" alt="image-20210520115808394"></p>
<p>不携带token访问接口ip:9999/sys/userAccount/username/jack,提示token无效或过期</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210520115909741.png" alt="image-20210520115909741"></p>
<p>获取token</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210520115957591.png" alt="image-20210520115957591"></p>
<p>拿access_token再次访问接口ip:9999/sys/userAccount/username/jack</p>
<p><img src="https://gitee.com/ruocy/image_repo/raw/master/images/image-20210520120058738.png" alt="image-20210520120058738"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>到此，SpringCloud整合OAuth和JWT就完毕了。其中里面有很多理论性的东西，我也不是很明白，只能等后续弄清楚再继续了。</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>[<a href="http://www.macrozheng.com/#/cloud/oauth2?id=spring-cloud-security%EF%BC%9Aoauth2%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8">Spring Cloud Security：Oauth2使用入门</a>]</p>
<p>[<a href="https://www.cnblogs.com/haoxianrui/p/13719356.html">Spring Cloud实战 | 第六篇：Spring Cloud Gateway + Spring Security OAuth2 + JWT实现微服务统一认证鉴权</a>]</p>
]]></content>
      <categories>
        <category>SpringCloud从零开始构建微服务</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Git命令整理</title>
    <url>/2021/05/24/Git%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h3><h4 id="下载指定tag项目"><a href="#下载指定tag项目" class="headerlink" title="下载指定tag项目"></a>下载指定tag项目</h4> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># git clone --branch [tags标签] [git地址]</span><br><span class="line">git clone --branch dubbo-2.5.4 https://gitee.com/apache/dubbo.git</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>常用命令</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
